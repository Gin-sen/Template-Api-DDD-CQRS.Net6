{
  "$schema": "http://json.schemastore.org/template",
  "author": "Maxime Places",
  "classifications": [ "Api", "DDD", "CQRS" ],
  "tags": {
    "language": "C#",
    "type": "solution"
  },
  "identity": "Net6.Ginsen.Template",
  "name": "Net6.Ginsen.Template",
  "shortName": "my-ddd-api",
  "sourceName": "My.DDD.CQRS.Temp6",
  "defaultName": "Net6.Ginsen.Template",
  "preferNameDirectory": true,
  "guids": [
    "3C8ED947-7C85-4C1B-B2B8-7CB37970B022",
    "9EB1AEDF-8A31-4F72-803F-25C83AFDB829",
    "BD2E2770-ABEC-4A06-A0C5-2AAE25216946",
    "15E57AE2-DCCB-4328-93D7-3FBF5547648F",
    "342AA315-DEFE-47C1-A9A3-684889FD3DA1",
    "39220016-FCE0-42A2-8D3C-5F58F8372B75",
    "BF8AD4B6-334A-4E88-AF42-AD7A0398B268",
    "745137BD-90F0-4165-8573-1F45E7DE7A9E",
    "5887A2F1-E48A-417D-88CC-2EF1E6FDCB80",
    "4311AC83-F797-4AFF-8879-77EA73542F2A",
    "84604806-63F4-4FF0-ABC0-46C71BF025A3",
    "5042A5DB-A45B-4034-B840-364441F31DFB",
    "1F2DF6D2-BB28-4217-9DA8-E1D14B0EAAD1",
    "ABB842E7-B535-4253-BCB6-C02F94506D89",
    "92633677-BEE5-46E0-951D-38A6726971E2",
    "4594AF1A-DF42-4A2A-93C5-318ACA6BB871",
    "375BC24C-72D3-44E9-8468-AA81CA5E4DC0"
  ],
  "symbols": {
    "includeTest": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true"
    },
    "fullNameDockerService": {
      "type": "derived",
      "valueSource": "name", // name -> pointe sur le nom du nouveau projet
      "valueTransform": "lc",
      "replaces": "my.ddd.cqrs.temp6"
    },
    "fullNameDockerImage": {
      "type": "derived",
      "valueSource": "name", // name -> pointe sur le nom du nouveau projet
      "valueTransform": "chainedImage",
      "replaces": "mydddcqrstemp6"
    },
    "chartFolderRename": {
      "type": "derived",
      "valueSource": "name",
      "valueTransform": "chainedFolder",
      "fileRename": "my-ddd-cqrs-temp6-api"
    }
  },
  "forms": {
    "chainedImage": {
      "identifier": "chain",
      "steps": [ "dotToNull", "lc" ] // An array of names of other transformations (applied in the order they appear in the array)
    },
    "dotToNull": {
      "identifier": "replace",
      "pattern": "\\.", // A regular expression matching the characters to replace
      "replacement": "" // The replacement for the matched characters
    },
    "chainedFolder": {
      "identifier": "chain",
      "steps": [ "dotToDash", "lc" ]
    },
    "dotToDash": {
      "identifier": "replace",
      "pattern": "\\.",
      "replacement": "-"
    },
    "lc": {
      "identifier": "lowerCase"
    }
  },
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(!includeTest)",
          "exclude": [ "*.Tests/**/*" ]
        },
        {
          "exclude": [
            "**/[Bb]in/**",
            "**/[Oo]bj/**",
            ".template.config/**/*",
            "**/*.lock.json",
            "**/.vs/**",
            "**/.git/**"
          ]
        }
      ]
    }
  ]
}