version: '3.4'

services:
  my.ddd.cqrs.temp6.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ConnectionStrings__AzureTables=AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;DefaultEndpointsProtocol=http;BlobEndpoint=http://localazurite:10000/devstoreaccount1;QueueEndpoint=http://localazurite:10001/devstoreaccount1;TableEndpoint=http://localazurite:10002/devstoreaccount1;
      - ConnectionStrings__MariaDB=server=localmariadb;port=3308;userid=user;password=password;database=mydddcqrstemp6_db;SslMode=Preferred;ConvertZeroDatetime=True;AllowZeroDatetime=True
      - ElasticApm__ServerUrl=http://apm-server:8200
      - ElasticApm__SecretToken=token-1670248926358
      - RabbitMQConfiguration__Activate=true
      - RabbitMQConfiguration__HostName=local.rabbit
      - RabbitMQConfiguration__UserName=rabbit_user
      - RabbitMQConfiguration__Password=rabbit_password
      - RabbitMQConfiguration__VirtualHost=my_vhost
      - RabbitMQConfiguration__AutomaticRecoveryEnabled=false
      - RabbitMQConfiguration__SslEnabled=false
    ports:
      - "80"
      - "443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https/:ro

  my.ddd.cqrs.temp6.workservice:
    environment:
      - DOTNET_ENVIRONMENT=Development
      - Logstash__Url=http://logstash:6044
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro

  local.azurite:
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
      
  local.mariadb:
    ports:
      - "3308:3308"
    environment:
      - MYSQL_TCP_PORT=3308
      - MYSQL_ROOT_PASSWORD=exemple
      ## Creation de la db au lancement du container
      - MYSQL_DATABASE=mydddcqrstemp6_db
      # Auth
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    volumes:
      - dbvolume:/var/lib/mysql

  local.rabbit:
      hostname: local.rabbit
      environment:
        - RABBITMQ_DEFAULT_USER=rabbit_user
        - RABBITMQ_DEFAULT_PASS=rabbit_password
        - RABBITMQ_DEFAULT_VHOST=my_vhost
#      - RABBITMQ_NODENAME=my-rabbit
        - RABBITMQ_HOSTNAME=local.rabbit
      ports:
        - 8080:15672 # Port de l'interface de managment (clear cache ou navigateur privé)
        - 5672:5672

  phpmyadmin:
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1

  setup:
    volumes:
      - ./elk-conf/setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./elk-conf/setup/helpers.sh:/helpers.sh:ro,Z
      - ./elk-conf/setup/roles:/roles:ro,Z
      - setup:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD-}
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD-}
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD-}
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD-}

  elasticsearch:
    volumes:
      - ./elk-conf/elastic/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD-}
      discovery.type: single-node

  logstash:
    volumes:
      - ./elk-conf/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./elk-conf/logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro,Z
      - ./elk-conf/logstash/beats-pipeline.yml:/usr/share/logstash/beats-pipeline.yml:ro,Z
      - ./elk-conf/logstash/tcp-pipeline.yml:/usr/share/logstash/tcp-pipeline.yml:ro,Z
      - ./elk-conf/logstash/http-pipeline.yml:/usr/share/logstash/http-pipeline.yml:ro,Z
    ports:
      - 5044:5044
      - 6044:6044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD-}
      CLUSTER_UUID: ${CLUSTER_UUID-}

  kibana:
    volumes:
      - ./elk-conf/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - 5601:5601
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD-}
      NODE_OPTIONS: --max_old_space_size=4096
  
  filebeat:
    user: root
    volumes:
      - ./elk-conf/filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro,Z
      - type: bind
        source: /var/lib/docker/containers
        target: /var/lib/docker/containers
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    ports:
     - 5066:5066
    environment:
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD-}
      CLUSTER_UUID: ${CLUSTER_UUID-}
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD-}

  metricbeat:
    volumes:
      - ./elk-conf/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro,Z
      - type: bind
        source: /
        target: /hostfs
        read_only: true
      - type: bind
        source: /sys/fs/cgroup
        target: /hostfs/sys/fs/cgroup
        read_only: true
      - type: bind
        source: /proc
        target: /hostfs/proc
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    environment:
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD-}

  fleet-server:
    environment:
      FLEET_SERVER_ENABLE: '1'
      FLEET_SERVER_INSECURE_HTTP: '1'
      FLEET_SERVER_POLICY_ID: fleet-server-policy
      # Fleet plugin in Kibana
      KIBANA_FLEET_SETUP: '1'
      # Enrollment.
      # (a) Auto-enroll using basic authentication
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD-}
      # (b) Enroll using a pre-generated service token
      #FLEET_SERVER_SERVICE_TOKEN: <service_token>
    ports:
      - 8220:8220

  apm-server:
    environment:
      FLEET_ENROLL: '1'
      FLEET_TOKEN_POLICY_NAME: Agent Policy APM Server
      FLEET_INSECURE: '1'
      FLEET_URL: http://fleet-server:8220
      # Enrollment.
      # (a) Auto-enroll using basic authentication
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD-}
      # (b) Enroll using a pre-generated enrollment token
      #FLEET_ENROLLMENT_TOKEN: <enrollment_token>
    ports:
      - 8200:8200

  heartbeat:
    volumes:
      - ./elk-conf/heartbeat/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro,Z
    environment:
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD-}

volumes:
  dbvolume:
  setup:
  elasticsearch:
